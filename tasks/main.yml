---
- name: ensure ssh keys exist
  cs_sshkeypair:
    name: "{{ item }}"
    public_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    api_region: "{{ cs_region }}"
  loop: "{{ cs_ssh_keys }}"
  run_once: yes

- name: ensure affinity group exist
  cs_affinitygroup:
    name: "{{ item.name }}"
    api_region: "{{ cs_region }}"
  loop: "{{ cs_affinity_groups }}"
  run_once: yes

- include_tasks: security_group.yml
  loop: "{{ cs_security_groups }}"
  loop_control:
    loop_var: security_group

- name: ensure VM instance started
  cs_instance:
    display_name: "{{ inventory_hostname }}"
    group: "{{ cs_group }}"
    template: "{{ cs_template }}"
    service_offering: "{{ cs_offering }}"
    security_groups: "{{ cs_instance_security_groups }}"
    affinity_group: "{{ cs_instance_affinity_group }}"
    ssh_key: "{{ cs_instance_ssh_key }}"
    zone: "{{ cs_zone }}"
    force: "{{ cs_force }}"
    api_region: "{{ cs_region }}"
    state: started
    user_data: |
      #cloud-config
      manage_etc_hosts: true
      fqdn: {{ inventory_hostname }}
  register: vm

- name: add private network
  cs_instance_nic:
    network: "{{ cs_private_network }}"
    vm: "{{ inventory_hostname }}"
    zone: "{{ cs_zone }}"
    api_region: "{{ cs_region }}"

- name: assing IP to the inventory
  set_fact:
    ansible_host: "{{ vm.default_ip }}"

- name: print VM instance infos
  debug:
    msg: "VM {{ inventory_hostname }}: {{ vm.default_ip }}"

- name: waiting for SSH to come up
  wait_for:
    port: "{{ ansible_port | default(22) }}"
    host: "{{ vm.default_ip }}"
  when: vm.default_ip is defined
